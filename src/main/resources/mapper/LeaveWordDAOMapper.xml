<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zywork.dao.LeaveWordDAO">

    <insert id="save" parameterType="leaveWordDO">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
        insert into t_leave_word
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nickname != null">
				nickname,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="replyFlag != null">
				reply_flag,
			</if>
			<if test="replyContent != null">
				reply_content,
			</if>
			<if test="replyTime != null">
				reply_time,
			</if>
			<if test="readFlag != null">
				read_flag,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nickname != null">
				#{nickname},
			</if>
			<if test="email != null">
				#{email},
			</if>
			<if test="replyFlag != null">
				#{replyFlag},
			</if>
			<if test="replyContent != null">
				#{replyContent},
			</if>
			<if test="replyTime != null">
				#{replyTime},
			</if>
			<if test="readFlag != null">
				#{readFlag},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			
        </trim>
    </insert>

    <insert id="saveBatch" parameterType="java.util.List">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
    	<foreach collection="list" item="item" separator=";">
            insert into t_leave_word
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.nickname != null">
				nickname,
			</if>
			<if test="item.email != null">
				email,
			</if>
			<if test="item.replyFlag != null">
				reply_flag,
			</if>
			<if test="item.replyContent != null">
				reply_content,
			</if>
			<if test="item.replyTime != null">
				reply_time,
			</if>
			<if test="item.readFlag != null">
				read_flag,
			</if>
			<if test="item.createTime != null">
				create_time,
			</if>
			
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.nickname != null">
				#{item.nickname},
			</if>
			<if test="item.email != null">
				#{item.email},
			</if>
			<if test="item.replyFlag != null">
				#{item.replyFlag},
			</if>
			<if test="item.replyContent != null">
				#{item.replyContent},
			</if>
			<if test="item.replyTime != null">
				#{item.replyTime},
			</if>
			<if test="item.readFlag != null">
				#{item.readFlag},
			</if>
			<if test="item.createTime != null">
				#{item.createTime},
			</if>
			
            </trim>
        </foreach>
    </insert>

    <delete id="removeById" parameterType="long">
        delete from t_leave_word where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_leave_word where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="leaveWordDO">
        update t_leave_word
        <set>
            <if test="nickname != null">
				nickname = #{nickname},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="replyFlag != null">
				reply_flag = #{replyFlag},
			</if>
			<if test="replyContent != null">
				reply_content = #{replyContent},
			</if>
			<if test="replyTime != null">
				reply_time = #{replyTime},
			</if>
			<if test="readFlag != null">
				read_flag = #{readFlag},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			update_time = CURRENT_TIMESTAMP,
        </set>
        where id = #{id} and version + 1 <![CDATA[<=]]> #{version}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
    	<foreach collection="list" item="item" separator=";">
            update t_leave_word
            <set>
                <if test="item.nickname != null">
				nickname = #{item.nickname},
			</if>
			<if test="item.email != null">
				email = #{item.email},
			</if>
			<if test="item.replyFlag != null">
				reply_flag = #{item.replyFlag},
			</if>
			<if test="item.replyContent != null">
				reply_content = #{item.replyContent},
			</if>
			<if test="item.replyTime != null">
				reply_time = #{item.replyTime},
			</if>
			<if test="item.readFlag != null">
				read_flag = #{item.readFlag},
			</if>
			<if test="item.createTime != null">
				create_time = #{item.createTime},
			</if>
			update_time = CURRENT_TIMESTAMP,
                <if test="item.version == null">
                    version = version + 1,
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

    <sql id="select_columns">
        id as id, nickname as nickname, email as email, reply_flag as replyFlag, reply_content as replyContent, reply_time as replyTime, read_flag as readFlag, create_time as createTime
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.id != null">
			and id = #{query.id}
		</if>
		<if test="query != null and query.idMin != null and query.idMax == null">
			and id <![CDATA[ >= ]]> #{query.idMin}
		</if>
		<if test="query != null and query.idMin == null and query.idMax != null">
			and id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.idMin != null and query.idMax != null">
			and id <![CDATA[ >= ]]> #{query.idMin} and id <![CDATA[ <= ]]> #{query.idMax}
		</if>
		<if test="query != null and query.nickname != null and query.nickname != ''">
			and nickname like concat('%', #{query.nickname}, '%')
		</if>
		<if test="query != null and query.email != null and query.email != ''">
			and email like concat('%', #{query.email}, '%')
		</if>
		<if test="query != null and query.replyFlag != null">
			and reply_flag = #{query.replyFlag}
		</if>
		<if test="query != null and query.replyFlagMin != null and query.replyFlagMax == null">
			and reply_flag <![CDATA[ >= ]]> #{query.replyFlagMin}
		</if>
		<if test="query != null and query.replyFlagMin == null and query.replyFlagMax != null">
			and reply_flag <![CDATA[ <= ]]> #{query.replyFlagMax}
		</if>
		<if test="query != null and query.replyFlagMin != null and query.replyFlagMax != null">
			and reply_flag <![CDATA[ >= ]]> #{query.replyFlagMin} and reply_flag <![CDATA[ <= ]]> #{query.replyFlagMax}
		</if>
		<if test="query != null and query.replyContent != null and query.replyContent != ''">
			and reply_content like concat('%', #{query.replyContent}, '%')
		</if>
		<if test="query != null and query.replyTime != null">
			and reply_time = #{query.replyTime}
		</if>
		<if test="query != null and query.replyTimeMin != null and query.replyTimeMax == null">
			and reply_time <![CDATA[ >= ]]> #{query.replyTimeMin}
		</if>
		<if test="query != null and query.replyTimeMin == null and query.replyTimeMax != null">
			and reply_time <![CDATA[ <= ]]> #{query.replyTimeMax}
		</if>
		<if test="query != null and query.replyTimeMin != null and query.replyTimeMax != null">
			and reply_time <![CDATA[ >= ]]> #{query.replyTimeMin} and reply_time <![CDATA[ <= ]]> #{query.replyTimeMax}
		</if>
		<if test="query != null and query.readFlag != null">
			and read_flag = #{query.readFlag}
		</if>
		<if test="query != null and query.readFlagMin != null and query.readFlagMax == null">
			and read_flag <![CDATA[ >= ]]> #{query.readFlagMin}
		</if>
		<if test="query != null and query.readFlagMin == null and query.readFlagMax != null">
			and read_flag <![CDATA[ <= ]]> #{query.readFlagMax}
		</if>
		<if test="query != null and query.readFlagMin != null and query.readFlagMax != null">
			and read_flag <![CDATA[ >= ]]> #{query.readFlagMin} and read_flag <![CDATA[ <= ]]> #{query.readFlagMax}
		</if>
		<if test="query != null and query.createTime != null">
			and create_time = #{query.createTime}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax == null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin}
		</if>
		<if test="query != null and query.createTimeMin == null and query.createTimeMax != null">
			and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		<if test="query != null and query.createTimeMin != null and query.createTimeMax != null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeMin} and create_time <![CDATA[ <= ]]> #{query.createTimeMax}
		</if>
		
    </sql>

    <select id="getById" parameterType="long" resultType="leaveWordDO">
        select
        <include refid="select_columns"/>
        from t_leave_word where id = #{id}
    </select>

    <select id="getVersionById" parameterType="long" resultType="integer">
        select version from t_leave_word where id = #{id}
    </select>

    <select id="listAll" resultType="leaveWordDO">
        select
        <include refid="select_columns"/>
        from t_leave_word
        order by update_time desc, create_time desc
    </select>

    <select id="listAllByCondition" resultType="leaveWordDO">
        select
        <include refid="select_columns"/>
        from t_leave_word
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
             ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            update_time desc, create_time desc
        </if>
    </select>

    <select id="listPageByCondition" resultType="leaveWordDO">
        select
        <include refid="select_columns"/>
        from t_leave_word
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            update_time desc, create_time desc
        </if>
        limit #{query.beginIndex}, #{query.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_leave_word
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
